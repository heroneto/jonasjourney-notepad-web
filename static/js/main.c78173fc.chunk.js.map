{"version":3,"sources":["services/api.ts","components/Sidebar.tsx","pages/Notes.tsx","pages/NoteEdit.tsx","routes.tsx","App.tsx","index.tsx"],"names":["dotenv","path","resolve","__dirname","api","axios","create","baseURL","Sidebar","closeSidebarFunc","location","useLocation","className","onClick","size","href","src","alt","to","activeClassName","pathname","activeStyle","backgroundColor","timeout","Notes","useState","notes","setNotes","searchValue","setSearchValue","searchDate","setSearchDate","showSidebar","setShowSidebar","execucoes","setExecucoes","showFilters","setShowFilters","limit","setLimit","skip","setSkip","total","setTotal","showNextPageButton","setShowNextPageButton","sortBy","setSortBy","sortOrder","setSortOrder","a","query","get","result","status","notesReceved","data","prevItens","length","value","console","log","createNote","bodyReq","title","body","date","Date","post","toast","success","then","error","handleSearch","clearTimeout","setTimeout","searchNote","exec","useEffect","onChange","e","target","type","placeholder","disabled","Number","map","note","_id","slice","toLocaleDateString","appendNotes","color","configure","autoClose","position","NoteEdit","history","useHistory","paramter","split","parameterId","id","setId","setTitle","setDate","setBody","showCommentModal","setShowCommentModal","comments","setComments","newCommentBody","setNewCommentBody","commentId","setCommentID","editCommentBody","setEditCommentBody","delete","push","year","month","day","put","noteId","noteResult","required","defaultValue","maxLength","comment","removeComment","showCommentEditor","Routes","exact","process","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c78173fc.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport path from 'path'\r\nimport * as dotenv from 'dotenv'\r\ndotenv.config({path: path.resolve(__dirname, '..', '..', '.env')})\r\n\r\nconst api = axios.create({\r\n  // baseURL: process.env.REACT_APP_API_HOST\r\n  baseURL: \"https://jonasnotepad.herokuapp.com\"\r\n})\r\n\r\n// console.log(process.env.REACT_APP_API_HOST)\r\n\r\nexport default api","import React from 'react'\r\nimport '../styles/components/sidebar.css'\r\nimport { FiChevronLeft } from 'react-icons/fi'\r\nimport { useLocation, NavLink } from 'react-router-dom'\r\n\r\ninterface sidebarProps {\r\n    closeSidebarFunc: Function\r\n}\r\n\r\nconst Sidebar : React.FC <sidebarProps> = ({closeSidebarFunc}) => {\r\n    const location = useLocation()\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sideBar\">\r\n            <div className=\"hideMenuContainer\">\r\n                <button onClick={() => closeSidebarFunc()}>\r\n                    <FiChevronLeft size={24}/>\r\n                </button>\r\n            </div>\r\n\r\n            <button className=\"headerContainer\">\r\n                <a href=\"https://github.com/heroneto\">\r\n                    <img src=\"https://avatars1.githubusercontent.com/u/41599309?s=460&u=65b95962731f7965ead8de961b01c59e66554721&v=4\" alt=\"Heron Eto\" />\r\n                </a>                \r\n            </button>\r\n\r\n            <div className=\"menuContainer\">\r\n                <span className=\"title\">\r\n                    Menu\r\n                </span>\r\n                <NavLink \r\n                    to=\"/notes\" \r\n                    className=\"menuOption\"\r\n                    activeClassName={location.pathname === \"/notes\" ? \"selected\" : \"\"}\r\n                    activeStyle={{\r\n                        backgroundColor: \"#D6D4C7\"\r\n                    }}\r\n                >\r\n                    Notas\r\n                </NavLink>\r\n                {/* <NavLink \r\n                    to=\"/comments\"\r\n                    className=\"menuOption\"\r\n                    activeClassName={location.pathname === \"/comments\" ? \"selected\" : \"\"}\r\n                    activeStyle={{\r\n                        backgroundColor: \"#D6D4C7\"\r\n                    }}\r\n                >\r\n                    Comentários\r\n                </NavLink> */}\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { useEffect, useState } from 'react'\r\nimport Sidebar from '../components/Sidebar'\r\nimport '../styles/pages/notes.css'\r\nimport { FiMenu, FiChevronRight, FiPlus } from 'react-icons/fi'\r\nimport { IoIosOptions }  from 'react-icons/io'\r\nimport api from '../services/api'\r\nimport { Link  } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nexport interface notesProps {\r\n\ttitle: string,\r\n\tbody: string,\r\n\tdate: string,\r\n\tcomments: Array<string>,\r\n\t_id: string,\r\n\t__v: Number\r\n}\r\nlet timeout: any = \"\"\r\n\r\ntoast.configure( {\r\n  autoClose: 1500,\r\n  position: \"top-center\",\r\n  limit: 3\r\n})\r\n\r\n\r\nexport default function Notes(){\r\n\tconst [ notes, setNotes ] = useState<notesProps[]>([])\r\n  const [ searchValue, setSearchValue ] = useState<string>(\"\")\r\n  const [ searchDate, setSearchDate ] = useState<string>(\"\")\r\n\tconst [ showSidebar, setShowSidebar ] = useState<boolean>(false)\r\n  const [ execucoes, setExecucoes ] = useState<number>(0)\r\n  \r\n  const [ showFilters, setShowFilters ] = useState<boolean>(false)\r\n  const [ limit, setLimit ] = useState<number>(10)\r\n  const [ skip, setSkip ] = useState<number>(0)\r\n  const [ total, setTotal ] = useState<number>(0)\r\n  const [ showNextPageButton, setShowNextPageButton ] = useState<boolean>(true)\r\n  const [ sortBy, setSortBy ] = useState<string>(\"updatedAt\")\r\n  const [ sortOrder, setSortOrder ] = useState<string>(\"-1\")\r\n\r\n  const nextPage = () => {\r\n    setSkip(skip + limit)\r\n    appendNotes()\r\n  }\r\n\r\n\tasync function appendNotes(){\r\n    const query = `limit=${limit}&skip=${skip+limit}&sortBy=${sortBy}&sortOrder=${sortOrder}`\r\n    const result = await api.get(`/notes?${query}`)\r\n    if(result.status === 200){\r\n      const notesReceved: Array<notesProps> = result.data.notes\r\n      const prevItens = [...notes, ...notesReceved]\r\n      setNotes(prevItens)\r\n      setTotal(result.data.total)\r\n      if(notesReceved.length < limit || skip+limit > total){\r\n        setShowNextPageButton(false)\r\n      }\r\n    }    \r\n  }\r\n  \r\n  async function searchNote(value: string){\r\n    const result = await api.get(`/notes/search?text=${value}`)\r\n    if(result.status === 200){\r\n      console.log(result.data)\r\n      setNotes(result.data)\r\n    }    \r\n  }\r\n  \r\n  async function createNote(){\r\n    const bodyReq = {\r\n      title: \"\",\r\n      body: \"\",\r\n      date: new Date()\r\n    }\r\n    const result = await api.post(`/notes`, bodyReq)\r\n    if(result.status === 201){\r\n      toast.success(\"nota criada com sucesso\")\r\n      api.get(`/notes?limit=${limit}&skip=0&sortBy=${sortBy}&sortOrder=${sortOrder}`).then(result => {\r\n        if(result.status === 200){\r\n          setTotal(result.data.total)\r\n          setNotes(result.data.notes)\r\n        }\r\n      })\r\n    }else {\r\n      toast.error(\"Falha na criação da nota\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function handleSearch(value:string){ \r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(() => {\r\n      searchNote(value)\r\n      setExecucoes(exec => exec + 1)\r\n    }, 1000)  \r\n\t}\r\n  \r\n  useEffect(() => {   \r\n    api.get(`/notes?limit=${limit}&skip=0&sortBy=${sortBy}&sortOrder=${sortOrder}`).then(result => {\r\n      if(result.status === 200){\r\n        setTotal(result.data.total)\r\n        setNotes(result.data.notes)\r\n        if(result.data.total === result.data.notes){\r\n          setShowNextPageButton(false)\r\n        }\r\n      }\r\n    })    \r\n\t}, [limit, sortBy, sortOrder])\r\n\r\n\r\n\treturn (\r\n      <div \r\n        className=\"notes-view-container\">\r\n          {showSidebar && \r\n            <Sidebar closeSidebarFunc={() => setShowSidebar(false)} />               \r\n          }\r\n          <div \r\n            className=\"listContainer\"\r\n          >            \r\n            <div className=\"titleContainer\">\r\n              <button onClick={() => setShowSidebar(!showSidebar)} className=\"toggleMenu\">\r\n                <FiMenu size={24}/>\r\n              </button>\r\n              <span className=\"title\">\r\n                Jonas Journey Notepad \r\n              </span>\r\n            </div>\r\n            <div className=\"listActionsContainer\">\r\n              <div className=\"searchData\">\r\n                <input \r\n                  onChange={e => {\r\n                    setSearchDate(\"\")\r\n                    setSearchValue(e.target.value)\r\n                    handleSearch(e.target.value)\r\n                  }} \r\n                  value={searchValue} \r\n                  type=\"text\" \r\n                  className=\"searchInput\" \r\n                  placeholder=\"Digite para pesquisar\"\r\n                  disabled={searchDate.length > 0}\r\n                />\r\n                <button onClick={() => setSearchValue(\"\")} className=\"button-clear\">\r\n                  Limpar\r\n                </button>\r\n              </div>\r\n              <div className=\"searchData\">\r\n                <input \r\n                  value={searchDate} \r\n                  onChange={e => {\r\n                    setSearchValue(\"\")\r\n                    setSearchDate(e.target.value)\r\n                    handleSearch(e.target.value)\r\n                  }}                  \r\n                  type=\"date\" \r\n                  className=\"searchInput\"\r\n                  disabled={searchValue.length > 0}\r\n                />\r\n                <button onClick={() => setSearchDate(\"\")} className=\"button-clear\">\r\n                  Limpar\r\n                </button>\r\n              </div>\r\n\r\n              {execucoes} Execuções\r\n                <button className=\"button\" onClick={createNote}> \r\n                  Nova Nota\r\n                </button>         \r\n            </div>\r\n            <div className=\"listHeader\">\r\n            {showFilters ?\r\n                <div className=\"listOptions\">\r\n                    <div className=\"closeOptions\">\r\n                      <button onClick={() => setShowFilters(false)} className=\"toggleOption\">\r\n                        <FiChevronRight size={24} />\r\n                      </button>\r\n                    </div>\r\n                    \r\n                    <span className=\"label\">\r\n                      Limite\r\n                    </span>\r\n                    <select disabled={searchValue.length > 0 || searchDate.length > 0} value={limit} onChange={e => setLimit(Number(e.target.value))} className=\"optionSelector\">\r\n                      <option value=\"10\">10</option>\r\n                      <option value=\"20\">20</option>\r\n                      <option value=\"50\">50</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"200\">200</option>\r\n                    </select>\r\n                    <span className=\"label\">\r\n                      Ordenar por:\r\n                    </span>\r\n                    <select  disabled={searchValue.length > 0 || searchDate.length > 0} value={sortBy} onChange={e => setSortBy(e.target.value)} className=\"optionSelector\">\r\n                      <option value=\"createdAt\">Data criação</option>\r\n                      <option value=\"updatedAt\">Data Atualização</option>\r\n                    </select>\r\n                    <span className=\"label\">\r\n                      Ordem:\r\n                    </span>\r\n                    <select  disabled={searchValue.length > 0 || searchDate.length > 0} value={sortOrder} onChange={e => setSortOrder(e.target.value)} className=\"optionSelector\">\r\n                      <option value=\"-1\">desc</option>\r\n                      <option value=\"1\">asc</option>\r\n                    </select>\r\n                    </div>\r\n              :\r\n              <button disabled={searchValue.length > 0 || searchDate.length > 0} onClick={() => setShowFilters(true)} className=\"toggleOption\">\r\n                <IoIosOptions size={24} />\r\n              </button>              \r\n            }\r\n            </div> \r\n            \r\n            <div className=\"listInfo\">\r\n                    <span>Mostrando {notes.length} de {total}</span>\r\n            </div>   \r\n            \r\n            <div className=\"list\">\r\n              <span className=\"title\">\r\n                Lista de notas\r\n              </span>\r\n              {notes.map(note => {\r\n                return (\r\n                  <Link to={`/note/${note._id}`} key={note._id} className=\"itemContainer\">                            \r\n                    <div className=\"itemContent\">\r\n                      <span className=\"noteTitle\">\r\n                        {note.title || \"Nova nota...\"}\r\n                      </span>\r\n                      <span className=\"noteBody\">\r\n                        {`${note.body.slice(0, 40)}...`}\r\n                      </span>\r\n                      <span className=\"noteDate\">\r\n                        {new Date(note.date).toLocaleDateString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"itemIcon\">\r\n                      <FiChevronRight size={24}/>\r\n                    </div>\r\n                  </Link>\r\n                )\r\n              })}\r\n              {showNextPageButton && searchValue.length === 0 && searchDate.length === 0 &&\r\n                <button onClick={nextPage} className=\"itemContainer-nextPage\">Ver mais</button> \r\n              }\r\n            </div>                            \r\n          </div>\r\n            <button\r\n              className=\"floatIcon\" \r\n              onClick={createNote}\r\n            >\r\n              <FiPlus size={32} color={\"#FFF\"} />\r\n            </button>\r\n      </div>\r\n\t)\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { FiChevronLeft, FiSend, FiX } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../services/api'\r\nimport '../styles/pages/noteedit.css'\r\nimport { useHistory  } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\n// var timeout: any = \"\"\r\n\r\ninterface commentsProps {\r\n  title: string,\r\n  body: string,\r\n  date: Date,\r\n  _id: string,\r\n  __v: Number\r\n}\r\n\r\nexport interface noteProps {\r\n\ttitle: string,\r\n\tbody: string,\r\n\tdate: string,\r\n\tcomments: Array<commentsProps>,\r\n\t_id: string,\r\n\t__v: Number\r\n}\r\n\r\ntoast.configure( {\r\n  autoClose: 1500,\r\n  position: \"top-center\",\r\n  limit: 3\r\n})\r\n\r\nconst NoteEdit = () => {\r\n  const history = useHistory()\r\n  const paramter = history.location.pathname.split(\"/\")\r\n  const parameterId = paramter[paramter.length-1]\r\n\r\n\r\n  const [ id, setId ] = useState<string>(\"\")\r\n\tconst [ title, setTitle ] = useState<string>(\"\")\r\n\tconst [ date, setDate ] = useState<string>('')\r\n  const [ body, setBody ] = useState<string>(\"\")\r\n  const [ showCommentModal, setShowCommentModal ]  = useState<Boolean>(false)\r\n  const [ comments, setComments ] = useState<commentsProps[]>([])\r\n  const [ newCommentBody, setNewCommentBody ] = useState<string>(\"\")\r\n  const [ commentId, setCommentID ] = useState<string>(\"\")\r\n  const [ editCommentBody, setEditCommentBody ] = useState<string>(\"\")\r\n\r\n  useEffect(() => {\r\n    api.get(`/note/${parameterId}`).then(result => {\r\n      if(result.status === 200){\r\n        const note : noteProps = result.data\r\n        setId(note._id)\r\n        setTitle(note.title)\r\n        setBody(note.body)\r\n        const [ day, month, year] = new Date(note.date).toLocaleDateString().split('/')\r\n        setDate(`${year}-${month}-${day}`)\r\n        setComments(note.comments)  \r\n      }\r\n    })\r\n  },[parameterId])\r\n\r\n  async function removeNote(){\r\n    const result = await api.delete(`/notes/${id}`)\r\n    if(result.status === 200){\r\n      history.push('/notes')\r\n    }\r\n  }\r\n\r\n  async function updateNote(){\r\n    const [ year, month, day ] = date.split('-')\r\n    const bodyReq = {\r\n\t\t\ttitle,\r\n\t\t\tbody,\r\n\t\t\tdate: new Date(Number(year), Number(month)-1, Number(day)),\r\n\t\t\tid\r\n    }\r\n    const result = await api.put(`/notes`, bodyReq)\r\n    if(result.status === 200) {\r\n      history.push('/notes')\r\n    }\r\n  }\r\n\r\n  async function addComment(){\r\n    const body = {\r\n      body: newCommentBody,\r\n      noteId: id,\r\n      date: new Date()\r\n    }\r\n    const result = await api.post(`/comments`, body)    \r\n    if(result.status === 200){\r\n      setComments(comments => [...comments, result.data])\r\n    }\r\n  }\r\n\r\n  async function showCommentEditor(id:string){\r\n    setCommentID(id)\r\n    const result = await api.get(`/comment/${id}`)\r\n    if(result.status === 200){\r\n      setEditCommentBody(result.data.body)\r\n      setShowCommentModal(true)\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  async function removeComment(id: string){\r\n    const result = await api.delete(`/comments/${id}`)\r\n    if(result.status === 200){\r\n      const noteResult = await api.get(`/note/${parameterId}`)\r\n      if(noteResult.status === 200){\r\n        const note : noteProps = noteResult.data        \r\n        setComments(note.comments)  \r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateComment(){\r\n    const body = {\r\n        body: editCommentBody,\r\n        date: new Date().toLocaleDateString(),\r\n        id: commentId\r\n    }\r\n    const result = await api.put(`/comments`, body)\r\n    if(result.status === 200){\r\n      const noteResult = await api.get(`/note/${parameterId}`)\r\n      if(noteResult.status === 200){\r\n        const note : noteProps = noteResult.data        \r\n        setComments(note.comments)  \r\n        setShowCommentModal(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"noteEdit-container\">\r\n          <div className=\"header\">\r\n            <Link \r\n              className=\"goBack\"\r\n              to={\"/notes\"}\r\n            >\r\n              <FiChevronLeft size={24} />\r\n            </Link>\r\n            \r\n            <div className=\"actions\">\r\n              <button className=\"activeButton\" onClick={updateNote}>\r\n                Atualizar\r\n              </button>               \r\n              <button \r\n                onClick={removeNote} \r\n                className=\"inactiveButton\"\r\n              >\r\n                Excluir\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"editorContainer\">\r\n            <div className=\"editorHeader\">\r\n              <input value={title} onChange={e => setTitle(e.target.value)} required type=\"text\" className=\"title\" placeholder=\"Toda jornada merece um belo  título...\"/>\r\n              <input onChange={e => setDate(e.target.value)} required type=\"date\" className=\"date\" placeholder=\"Insira a data..\"  defaultValue={date}/>\r\n            </div>\r\n            <div className=\"editor\">\r\n              <textarea maxLength={2000} value={body} onChange={e => setBody(e.target.value)}  className=\"noteInput\" placeholder=\"Fale um pouco da sua jornada...\"/>\r\n              <div className=\"comments-container\">\r\n                <span className=\"title\">\r\n                  Comentários\r\n                </span>\r\n                <div className=\"inputContainer\">\r\n                  <textarea maxLength={250} onChange={e => setNewCommentBody(e.target.value)} value={newCommentBody} className=\"commentInput\"  placeholder=\"Insira o comentário aqui...\"/>\r\n                  <button onClick={addComment}>\r\n                    <FiSend size={24}/>\r\n                  </button>\r\n                </div>                \r\n                <div className=\"commentList\">\r\n              {comments.map(comment => {\r\n                return (\r\n                  <div key={comment._id} className=\"comment\">\r\n                    <span className=\"commentDate\">\r\n                      {comment.date}\r\n                    </span>\r\n                    <span className=\"commentText\">\r\n                      {comment.body}\r\n                    </span>\r\n                    <div className=\"commentActions\">\r\n                      <button onClick={() => removeComment(comment._id)} className=\"removeComment\">\r\n                        Remover\r\n                      </button>\r\n                      <button onClick={() => showCommentEditor(comment._id)} className=\"editComment\">\r\n                        Editar\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}              \r\n            </div>                \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {showCommentModal && \r\n            <div className=\"comment-edit-modal\">\r\n              <div className=\"editor\">\r\n                <button onClick={() => setShowCommentModal(false)} className=\"closeModal\">\r\n                  <FiX size={24}/>\r\n                </button>\r\n                <div className=\"inputContainer\">\r\n                  <textarea value={editCommentBody} onChange={e => setEditCommentBody(e.target.value)} className=\"commentInput\"  placeholder=\"Insira o comentário aqui...\"/>\r\n                  <button onClick={updateComment}>\r\n                    <FiSend size={24}/>\r\n                  </button>\r\n                </div>\r\n              </div>                    \r\n            </div>\r\n          }\r\n\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default NoteEdit","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    BrowserRouter\r\n} from 'react-router-dom'\r\nimport Notes from './pages/Notes'\r\nimport NoteEdit from './pages/NoteEdit'\r\n\r\n\r\nexport default function Routes(){\r\n    return (\r\n        <BrowserRouter>\r\n                <Switch>\r\n                        <Route exact path={process.env.PUBLIC_URL + \"/\"}>\r\n                        <Notes />\r\n                    </Route>\r\n                    <Route path={process.env.PUBLIC_URL + \"/notes\"}>\r\n                        <Notes />\r\n                    </Route>\r\n                    <Route path={process.env.PUBLIC_URL + \"/note/:id\"}>\r\n                        <NoteEdit />\r\n                    </Route>\r\n                </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\nimport Routes from './routes';\nimport './styles/global.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}